// <auto-generated />
using BookStore.EF_Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BookStore.Migrations
{
    [DbContext(typeof(EF_DataContext))]
    partial class EFDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BookStore.EF_Core.Books", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("BookStore.EF_Core.shape", b =>
                {
                    b.Property<string>("ShapeId")
                        .HasColumnType("text");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("shapeDim")
                        .HasColumnType("integer");

                    b.Property<string>("shapeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ShapeId");

                    b.HasIndex("Id");

                    b.ToTable("Shapes");
                });

            modelBuilder.Entity("BookStore.EF_Core.shape", b =>
                {
                    b.HasOne("BookStore.EF_Core.Books", "Books")
                        .WithMany("shape")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Books");
                });

            modelBuilder.Entity("BookStore.EF_Core.Books", b =>
                {
                    b.Navigation("shape");
                });
#pragma warning restore 612, 618
        }
    }
}
